

    public const ARRAYS_OR_STRINGS = [];

    protected const ARRAYS = [];

    protected const OBJECTS = [];

    protected const BOOLEANS = [];

    protected const INTEGERS = [];

    public const STRINGS = [];

    protected static $instance;

    public function __get($key)
    {
        try {
            $return = parent::__get($key);

            if(isset(static::ARRAYS[$key])){
                if(is_array($return)){
                    return $return;
                }
                $return = json_decode($return, true) ?? $return;
                if (is_array($return) && static::ARRAYS[$key] === 2) {
                    return array_combine(array_values($return), array_values($return));
                }

                if (static::ARRAYS[$key] === 3) {
                    return (int)$return;
                }
                return $return;
            }

            if (isset(static::ARRAYS_OR_STRINGS[$key])) {
                if(is_array($return)){
                    return $return;
                }
                $return = json_decode($return, true) ?? $return;
                if (is_array($return) && static::ARRAYS_OR_STRINGS[$key] === 2) {
                    return array_combine(array_values($return), array_values($return));
                }

                if (static::ARRAYS_OR_STRINGS[$key] === 3) {
                    return (int)$return;
                }

                //still here?
                return $return;
            }

            if (isset(static::INTEGERS[$key])) {
                return (int)$return;
            }

            if (isset(static::BOOLEANS[$key])) {
                return (bool)$return;
            }

            if (isset(static::OBJECTS[$key])) {
                $class = static::OBJECTS[$key];
                try {
                    return $class::load($class);
                } catch (UnderflowException $e) {
                }
            }

            return $return;
        }
        catch(Throwable $e){
        }
    }
