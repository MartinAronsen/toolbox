<?php

namespace IPS\{app}\extensions\toolbox\ProxyHelpers;

/* To prevent PHP errors (extending class does not exist) revealing path */
if ( !defined( '\IPS\SUITE_UNIQUE_KEY' ) )
{
	header( ( isset( $_SERVER['SERVER_PROTOCOL'] ) ? $_SERVER['SERVER_PROTOCOL'] : 'HTTP/1.0' ) . ' 403 Forbidden' );
	exit;
}

/**
 * {class}
 */
class _{class}
{

    /**
     * add property to \IPS\Data\Store DocComment
     *
     * @param array $classDoc
     */
    public function store( ClassGenerator $classGenerator )
    {
        //any add/remove method from ClassGenerator can be used here, however will add to the Data\Store proxy class, use map() if you want to target a particular class.
        //$classGenerator->addPropertyTag( 'propName', [ 'hint' => int|string|array|Class, 'comment' => 'comment', 'type' => read|write|both);
    }

    /**
     * add property to \IPS\Request proxy DocComment
     *
     * @param array $classDoc
     */
    public function request( ClassGenerator $classGenerator )
    {
        //any add/remove method from ClassGenerator can be used here, however will add to the Data\Store proxy class, use map() if you want to target a particular class.
        //$classGenerator->addPropertyTag( 'propName', [ 'hint' => int|string|array|Class, 'comment' => 'comment', 'type' => read|write|both);
    }

    /**
    * returns a list of classes available to run on classes
    * @return array
    * $heelpers[ class\to\look\for ][] = class\of\helper\class;
    * @param $helpers
    */
    public function map(&$helpers)
    {
        //see toolbox\extensions\toolbox\ProxyHelpers\proxy.php::map()
    }
}
